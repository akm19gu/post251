// content-loader.js (Corrected filenames for deployed HTML files)

class ContentLoader {
    constructor() {
        this.init();
    }

    async init() {
        await this.loadContent();
    }

    async loadContent() {
        try {
            // Load HTML files generated by build.py from the root of the deployed site
            // マッピング: サークル紹介 -> introduction, コンセプト -> concept, 収録曲 -> tracks
            const introContent = await this.loadHtml("サークル紹介.html");
            this.updateSection("introduction", introContent);

            const conceptContent = await this.loadHtml("コンセプト.html");
            this.updateSection("concept", conceptContent);

            const tracksContent = await this.loadHtml("収録曲.html");
            this.updateSection("tracks", tracksContent);

        } catch (error) {
            console.log("Content files not found, using default content", error);
        }
    }

    async loadHtml(filePath) {
        try {
            const response = await fetch(filePath);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const text = await response.text();
            return text; // HTMLはそのまま返す
        } catch (error) {
            console.error(`Could not load ${filePath}:`, error);
            return null;
        }
    }

    updateSection(sectionId, content) {
        if (!content) return;

        const section = document.getElementById(sectionId);
        if (section) {
            const placeholder = section.querySelector(".content-placeholder");
            if (placeholder) {
                placeholder.innerHTML = content;
            }
        }
    }
}

document.addEventListener("DOMContentLoaded", () => {
    new ContentLoader();
});
